// Generated by CoffeeScript 1.4.0
(function() {

  $.mockjax({
    url: '/gen',
    responseTime: 1,
    responseText: 'itsafaaaaake'
  });

  $(function() {
    $.widget("custom.generator", {
      container: {},
      classNamespace: '',
      history: [],
      _history: function(self) {
        var $hist, update;
        $hist = self.container[self.options.history];
        update = function() {
          var data, _i, _len, _ref, _results;
          $hist.html('');
          _ref = self.history;
          _results = [];
          for (_i = 0, _len = _ref.length; _i < _len; _i++) {
            data = _ref[_i];
            _results.push($hist.append("<li>" + data + "</li>"));
          }
          return _results;
        };
        return {
          push: function(data) {
            self.history.push(data);
            return update(data);
          }
        };
      },
      _create: function() {
        return this._builder();
      },
      _builder: function() {
        this.classNamespace = this.element.attr('id');
        this._build("<input class='input'>");
        this._build("<button class='button'>" + this.options.buttonText + "</button>");
        this._build("<ul class='results'>");
        return this._construct();
      },
      _build: function(el) {
        var $el, cl, elClass;
        $el = $(el);
        cl = $el.attr('class'.toLowerCase());
        $el.data('action', cl);
        elClass = "" + this.classNamespace + "__" + cl;
        $el.attr('class', elClass);
        this.container[cl] = $el;
        return this;
      },
      _construct: function() {
        var el, name, _ref;
        _ref = this.container;
        for (name in _ref) {
          el = _ref[name];
          el.appendTo(this.element);
        }
        this._clicker();
        this._updater();
        return this;
      },
      _updater: function() {
        var _this = this;
        return this.element.on('keyup', 'input', function(e) {
          return _this.element.data('origin', $(e.target).val());
        });
      },
      _clicker: function() {
        var _this = this;
        return this.element.on('click', function(e) {
          var action;
          if ($(e.target).hasClass("" + _this.classNamespace + "__" + _this.options.sender)) {
            _this._sender();
          }
          action = $(e.target).data('action');
          if (_this.options[action]) {
            return _this.options[action]({
              value: _this.element.data('origin')
            });
          }
        });
      },
      _sender: function() {
        var _this = this;
        return $.ajax({
          type: "POST",
          url: "" + this.options.url,
          data: {
            origin: this.element.data('origin')
          },
          success: function(r) {
            return _this._history(_this).push(r);
          }
        });
      }
    });
    return $('#generator').generator({
      buttonText: 'GENERATE!',
      url: '/gen',
      sender: 'button',
      history: 'results'
    });
  });

}).call(this);
